{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUser","userId","usersFromServer","find","App","useState","inputTitle","setInputTitle","selectedUserId","setSelectedUserId","newTodos","setNewTodos","titleError","setTitleError","selectUserError","setSelectUserError","action","method","onSubmit","e","preventDefault","newTodo","Math","max","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"uPAAe,G,MAAA,CACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,4B,+BCpDEC,EAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCJ,EAEEI,EAFFJ,KACAE,EACEE,EADFF,MAGF,OACE,mBAAGG,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACGF,KCNMO,G,MAA4B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAExCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,mCACE,0BACE,UAASL,EACTM,UAAWM,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIL,UAAU,kBAAd,SAAiCI,IAEhCL,GAAQ,cAAC,EAAD,CAAUA,KAAMA,WCrBpBQ,EAA4B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1C,OACE,yBAASR,UAAU,WAAnB,SACGQ,EAAMC,KAAI,SAAAN,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKT,UCJxC,SAASgB,EAAQC,GAGf,OAFkBC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKT,KAAOiB,MAEvC,KAGtB,IAAMH,ECbS,CACb,CACEd,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,GACJU,MAAO,kBACPC,WAAW,EACXM,OAAQ,GAEV,CACEjB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXM,OAAQ,IDJkBF,KAAI,SAAAN,GAAI,kCACjCA,GADiC,IAEpCJ,KAAMW,EAAQP,EAAKQ,aAGRG,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAS,GAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAgCJ,mBAASP,GAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KACA,EAAoCN,oBAAS,GAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAA8CR,oBAAS,GAAvD,mBAAOS,EAAP,KAAwBC,EAAxB,KAmCA,OACE,sBAAKzB,UAAU,MAAf,UACE,+CAEA,uBACE0B,OAAO,aACPC,OAAO,OACPC,SA9BgB,SAACC,GACrBA,EAAEC,iBAEFP,GAAeP,GACfS,GAAoBP,GAEpB,IAEMa,EAAU,CACdrC,GAHgBsC,KAAKC,IAAL,MAAAD,KAAI,YAAQZ,EAASX,KAAI,SAAAN,GAAI,OAAIA,EAAKT,QAAO,EAI7DU,MAAOY,EACPL,OAAQO,EACRb,WAAW,EACXN,KAAMW,EAAQQ,IAGZF,GAAcE,IAChBG,EAAY,GAAD,mBAAKD,GAAL,CAAeW,KAC1Bd,EAAc,IACdE,EAAkB,KAQlB,UAKE,sBAAKnB,UAAU,QAAf,UACE,kCACG,UACD,uBACEkC,KAAK,OACL,UAAQ,aACRC,YAAY,gBACZC,MAAOpB,EACPqB,SAlDQ,SAACR,GACnBZ,EAAcY,EAAES,OAAOF,OACvBb,GAAc,SAoDPD,GAAc,sBAAMtB,UAAU,QAAhB,qCAGjB,sBAAKA,UAAU,QAAf,UACE,kCACG,SACD,yBACE,UAAQ,aACRoC,MAAOlB,EACPmB,SA1Da,SAACR,GACxBV,GAAmBU,EAAES,OAAOF,OAC5BX,GAAmB,IAqDX,UAKE,wBAAQW,MAAM,IAAIG,UAAQ,EAA1B,2BAEC3B,EAAgBH,KAAI,SAAAV,GAAI,OACvB,wBAAsBqC,MAAOrC,EAAKL,GAAlC,SACGK,EAAKJ,MADKI,EAAKL,aAOvB8B,GACI,sBAAMxB,UAAU,QAAhB,qCAGP,wBAAQkC,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU1B,MAAOY,QE1GvBoB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1c6cb6bd.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <>\n      <article\n        data-id={id}\n        className={classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )}\n      >\n        <h2 className=\"TodoInfo__title\">{title}</h2>\n\n        {user && <UserInfo user={user} />}\n      </article>\n    </>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nfunction getUser(userId: number) {\n  const foundUser = usersFromServer.find(todo => todo.id === userId);\n\n  return foundUser || null;\n}\n\nconst todos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [inputTitle, setInputTitle] = useState('');\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [newTodos, setNewTodos] = useState(todos);\n  const [titleError, setTitleError] = useState(false);\n  const [selectUserError, setSelectUserError] = useState(false);\n\n  const handleTitle = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(e.target.value);\n    setTitleError(false);\n  };\n\n  const handleSelectUser = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUserId(+e.target.value);\n    setSelectUserError(false);\n  };\n\n  const handleAddTodo = (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setTitleError(!inputTitle);\n    setSelectUserError(!selectedUserId);\n\n    const newTodoId = Math.max(...newTodos.map(todo => todo.id)) + 1;\n\n    const newTodo = {\n      id: newTodoId,\n      title: inputTitle,\n      userId: selectedUserId,\n      completed: false,\n      user: getUser(selectedUserId),\n    };\n\n    if (inputTitle && selectedUserId) {\n      setNewTodos([...newTodos, newTodo]);\n      setInputTitle('');\n      setSelectedUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={inputTitle}\n              onChange={handleTitle}\n            />\n          </label>\n\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={handleSelectUser}\n            >\n              <option value=\"0\" disabled>Choose a user</option>\n\n              {usersFromServer.map(user => (\n                <option key={user.id} value={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {selectUserError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={newTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}